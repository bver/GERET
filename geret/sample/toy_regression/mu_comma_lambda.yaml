---
algorithm:
  class: MuLambda

  comma_or_plus: comma

  population_size: 500
  lambda_size: 600
  elite_size: 10 

  probabilities:
    crossover: 0.9
    mutation: 0.01
    injection: 0.9

  termination:
    max_steps: 2000
    on_individual: :stopping_condition

  init:
    method: ramped # grow or full or random or ramped
    random_magnitude: 16 #same as mutation.magnitude
    random_length: 8
    sensible_depth: 4   

  inject: # alternative to a crossover or copy
    method: full # grow or full or random
    random_magnitude: 16 #same as mutation.magnitude
    random_length: 8
    sensible_depth: 3   
   
grammar:
  class: AbnfFile
  filename: sample/toy_regression/grammar.abnf

mapper:
  class: DepthLocus
  wraps_to_fail: 3 

selection:
  class: RankSampling  #Truncation 
selection_rank: #optional
  class: Ranking
#  min: 0.5
#  max: 1.5

elite_rank:
  class: Ranking
         
crossover:
  class: Crossover
  margin: 2 #1
  step: 2

mutation:
  class: Mutation
  magnitude: 16 # same as individual.init_magnitude

store:
  class: Store
  filename: ./toy_mu_comma_lambda.store

report:
  class: ToyReport
  require: sample/toy_regression/toy_report.rb

individual:
  class: ToyIndividualSingleObjective
  require: sample/toy_regression/toy_individual.rb
  shorten_chromozome: true
