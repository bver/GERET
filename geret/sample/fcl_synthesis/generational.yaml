---
algorithm:
  class: Generational

  population_size: 500
  elite_size: 50

  probabilities:
    crossover: 0.9
    mutation: 0.01
    injection: 0.9

  termination:
    max_steps: 1000
    on_individual: stopping_condition

  init:
    method: grow # grow or full or ramped
    sensible_depth: 7   

  inject:
    method: grow # grow or full or random
    sensible_depth: 7   
 
grammar:
  class: Abnf::File
  filename: sample/fcl_synthesis/grammar.abnf

mapper:
  class: DepthLocus

elite_rank:
  class: Ranking
  order_by: :fitness  
  direction: :minimize 

selection:
  class: Tournament # RankRoulette
  tournament_size: 2
selection_rank: #optional
  class: Ranking
        
crossover:
  class: CrossoverRipple
  margin: 2
  step: 2
 
mutation:
  class: Mutation
  magnitude: 16

store:
  class: Store
  filename: ./fcl_generational.store
 
report:
  class: FclReport
  require: sample/fcl_synthesis/fcl_report.rb

individual:
  class: FclIndividualSingleObjective
  require: sample/fcl_synthesis/fcl_individual.rb
  shorten_chromozome: true 
 
evaluator:
  class: WorkPipes
  destination: error=
  commands: 
    - 'cd sample/fcl_synthesis/ &&  CLASSPATH=".:./jFuzzyLogic_2.0.6.jar" java Evaluator'
   
   

